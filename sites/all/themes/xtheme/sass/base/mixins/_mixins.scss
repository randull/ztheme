/*
 * Mixins.
 * Snippets of reusable CSS to develop faster and keep your code readable.
 * Add all mixins in this file.
 */

@import 'grid';
@import 'buttons';

/* Component mixins */
@mixin cf {
  zoom: 1;
  &:after {
    clear: both;
    content: " ";
    display: block;
    font-size: 0;
    height: 0;
    visibility: hidden;
  }
}

@mixin outer-container {
  @include clearfix;
  margin-left: auto;
  margin-right: auto;
  max-width: $max-width;
  padding: 0 $gutter/2;
}

/*
 * CSS image replacement.
 * Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757.
 */
@mixin hide-text {
  color: transparent;
  background-color: transparent;
  border: 0;
  font: 0/0 a;
  text-shadow: none;
}

/*
 * Overwrite the default media mixin with an IE9 fallback.
 */
@mixin media($query:$feature $value $columns, $ie: false, $total-columns: $grid-columns) {
  @if $ie{
    .lt-ie9 &{
      $default-grid-columns: $grid-columns;
      $grid-columns: $total-columns;
      @content;
      $grid-columns: $default-grid-columns;
    }
  }

  @if length($query) == 1 {
    @media screen and ($default-feature: nth($query, 1)) {
      $default-grid-columns: $grid-columns;
      $grid-columns: $total-columns;
      @content;
      $grid-columns: $default-grid-columns;
    }
  }

  @else if length($query) == 2 {
    @media screen and (nth($query, 1): nth($query, 2)) {
      $default-grid-columns: $grid-columns;
      $grid-columns: $total-columns;
      @content;
      $grid-columns: $default-grid-columns;
    }
  }

  @else if length($query) == 3 {
    @media screen and (nth($query, 1): nth($query, 2)) {
      $default-grid-columns: $grid-columns;
      $grid-columns: nth($query, 3);
      @content;
      $grid-columns: $default-grid-columns;
    }
  }

  @else if length($query) == 4 {
    @media screen and (nth($query, 1): nth($query, 2)) and (nth($query, 3): nth($query, 4)) {
      $default-grid-columns: $grid-columns;
      $grid-columns: $total-columns;
      @content;
      $grid-columns: $default-grid-columns;
    }
  }

  @else if length($query) == 5 {
    @media screen and (nth($query, 1): nth($query, 2)) and (nth($query, 3): nth($query, 4)) {
      $default-grid-columns: $grid-columns;
      $grid-columns: nth($query, 5);
      @content;
      $grid-columns: $default-grid-columns;
    }
  }

  @else {
    @warn "Wrong number of arguments for breakpoint(). Read the documentation for more details.";
  }
}

/*
 * Calculate the px fallback for an rem value.
 * E.g.: @include rem_px(line-height, 1.5rem);
 * Returns both the rem and the px values.
 */
@mixin rem_px($prop, $rem_val){
  #{$prop}: $rem_val / 1rem * $base-font-size;
  #{$prop}: $rem_val;
}

/*
 * Calculate the rem value and px fallback for a px value.
 * E.g.: @include px_rem(line-height, 16px);
 * Returns both the rem and the px values.
 */
@mixin px_rem($prop, $px_val){
  #{$prop}: $px_val;
  #{$prop}: $px_val / $base-font-size * 1rem;
}
